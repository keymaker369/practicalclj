cmdhistory=["(foo)" "(foo \\"ddd\\")" "(+ 5 6)" "(ns qwerty.core)" "(ns qwerty.core\\r\\n  (\:require [net.cgrand.enlive-html \:as html])\\r\\n  (\:require [clj-time.core \:as time])\\r\\n  (\:require [clj-time.format \:as time-format])\\r\\n  (\:require [clojure.java.jdbc \:as j]))" "(ns qwerty.core)" "fn" "do" "let" "(ns qwerty.core)" "(ns qwerty.web)" "(set-ref-value uslov false)" "@uslov" "keep" "shape" "\\n(shape [[1 2 3] [4 5 6]])" "(shape [[1 2 3] [4 5 6]])" "(mtx/shape [[1 2 3] [4 5 6]])" "(mtx/shape [[[1 2 3] [4 5 6]] [[1 2 3] [4 5 6]]])" "(mtx/shape [[[[1 2 3] [4 5 6]] [[1 2 3] [4 5 6]]] [[[1 2 3] [4 5 6]] [[1 2 3] [4 5 6]]]])" "(range 0 9)" "(range \\n  9)" "(cartesian-product [1 2 3] [4 5 6])" "(cmb/cartesian-product [1 2 3] [4 5 6])" "(cmb/cartesian-product (1 2 3) (4 5 6))" "(vector (1 2 3) (4 5 6))" "(vector (range 3) (range 6))" "(cmb/cartesian-product (1 2 3) (4 5 6))" "(cmb/cartesian-product [1 2 3] [4 5 6])" "(cmb/cartesian-product (vector1 2 3) (vectror 4 5 6))" "(cmb/cartesian-product (range 3) (range 6))" "(vector (range 3) (range 6))" "(for [x [1 2 3] y [4 5 6]] \\n  (vector x y))" "(compare 1 3)" "(compare 1 1)" "(differences a b)" "(not nil)"]
eclipse.preferences.version=1
